{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZiQi\\\\Desktop\\\\\\u65B0\\u5EFA\\u6587\\u4EF6\\u5939\\\\portofolio\\\\portofolio\\\\src\\\\Components\\\\Skills\\\\Skill.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport LargeBubble from './LargeBubble';\nimport bubble from './bubble.png';\nimport { getRandomInt, generateNonOverlappingPosition } from './utils'; // Make sure to create and import these utility functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background-color: #04364A;\n  overflow: hidden;\n`;\n_c = Container;\nconst skills = [{\n  skill: 'Artificial Intelligence',\n  subSkills: ['Data Analysis', 'Computer Vision', 'PyTorch', 'Deep Learning', 'Natural Language Processing'],\n  image: bubble\n}, {\n  skill: 'Web Development',\n  subSkills: ['HTML', 'CSS', 'JavaScript', 'React', 'Node.js'],\n  image: bubble\n}, {\n  skill: 'Game Development',\n  subSkills: ['Unity', 'Unreal Engine', 'C#', 'Mechanic Design', 'Narrative Design'],\n  image: bubble\n}, {\n  skill: 'Virtual Reality',\n  subSkills: ['Unity', 'VRChat SDK', 'Oculus XR Tools', 'User Experience Design'],\n  image: bubble\n}, {\n  skill: 'Software Development',\n  subSkills: ['Java', 'Python', 'C++', 'Data Sturcture and Algorithm', 'Git', 'Docker'],\n  image: bubble\n}];\nconst fetchPositionsFromFile = async filename => {\n  const response = await fetch(`${process.env.PUBLIC_URL}/${filename}`);\n  if (!response.ok) {\n    throw new Error('Network response was not ok');\n  }\n  return await response.json();\n};\nexport function Skill() {\n  _s();\n  const [positions, setPositions] = useState([]);\n  const [allSmallBubblePositions, setAllSmallBubblePositions] = useState([]);\n  useEffect(() => {\n    const containerSize = {\n      width: window.innerWidth - 70,\n      height: window.innerHeight - 140\n    };\n    const newPositions = [];\n    const sizes = [];\n    const success = true;\n    //console.log('window.innerWidth', window.innerWidth, 'window.innerHeight', window.innerHeight);\n    skills.forEach(skillSet => {\n      const size = skillSet.subSkills.length * 50 + 20;\n      const {\n        position,\n        overlap\n      } = generateNonOverlappingPosition(size, newPositions, containerSize, {\n        x: 170,\n        y: 250\n      });\n      if (overlap) {\n        success = false;\n      }\n      newPositions.push(position);\n      sizes.push(size);\n    });\n    if (success) {\n      let finalPos = newPositions.map((pos, index) => ({\n        ...pos,\n        size: sizes[index]\n      }));\n      setPositions(finalPos);\n    } else {\n      try {\n        const storedPositions = fetchPositionsFromFile('largePos.json');\n        setPositions(storedPositions);\n      } catch (error) {\n        console.error('Failed to fetch positions:', error);\n      }\n    }\n\n    /*\r\n        const savePositionsToLocalStorage = (positions) => {\r\n          const jsonString = JSON.stringify(positions);\r\n          localStorage.setItem('largePos.json', jsonString);\r\n        };\r\n        savePositionsToLocalStorage(finalPos);\r\n        */\n  }, []);\n  const handleSmallBubblePositions = positions => {\n    setAllSmallBubblePositions(allSmallBubblePositions.concat(positions));\n  };\n  const downloadPositionsAsFile = () => {\n    const positions = localStorage.getItem('${process.env.PUBLIC_URL}/position/largePos.json');\n    const blob = new Blob([positions], {\n      type: 'application/json'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `largePos.json`; // Use template literals to include the name parameter\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  const loadPositions = async () => {\n    try {\n      const storedPositions = await fetchPositionsFromFile('largePos.json');\n      console.log('Loaded positions from file:', storedPositions);\n      // Do something with the loaded positions, e.g., set them in state\n    } catch (error) {\n      console.error('Failed to fetch positions:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [positions.length > 0 && skills.map((skillSet, index) => /*#__PURE__*/_jsxDEV(LargeBubble, {\n      skill: skillSet.skill,\n      subSkills: skillSet.subSkills,\n      image: skillSet.image,\n      size: positions[index].size,\n      position: {\n        x: positions[index].x,\n        y: positions[index].y\n      },\n      existingPositions: allSmallBubblePositions,\n      onSmallBubblePositionsGenerated: handleSmallBubblePositions\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadPositionsAsFile,\n      children: \"Download Positions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(Skill, \"TV0ECe8f1feWaacoeS+EjCA/5G0=\");\n_c2 = Skill;\nexport default Skill;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Skill\");","map":{"version":3,"names":["React","useEffect","useState","styled","LargeBubble","bubble","getRandomInt","generateNonOverlappingPosition","jsxDEV","_jsxDEV","Container","div","_c","skills","skill","subSkills","image","fetchPositionsFromFile","filename","response","fetch","process","env","PUBLIC_URL","ok","Error","json","Skill","_s","positions","setPositions","allSmallBubblePositions","setAllSmallBubblePositions","containerSize","width","window","innerWidth","height","innerHeight","newPositions","sizes","success","forEach","skillSet","size","length","position","overlap","x","y","push","finalPos","map","pos","index","storedPositions","error","console","handleSmallBubblePositions","concat","downloadPositionsAsFile","localStorage","getItem","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","loadPositions","log","children","existingPositions","onSmallBubblePositionsGenerated","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/ZiQi/Desktop/新建文件夹/portofolio/portofolio/src/Components/Skills/Skill.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport LargeBubble from './LargeBubble';\r\nimport bubble from './bubble.png';\r\nimport { getRandomInt, generateNonOverlappingPosition } from './utils';  // Make sure to create and import these utility functions\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: #04364A;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst skills = [\r\n  {\r\n    skill: 'Artificial Intelligence',\r\n    subSkills: ['Data Analysis', 'Computer Vision', 'PyTorch', 'Deep Learning', 'Natural Language Processing'],\r\n    image: bubble\r\n  },\r\n  {\r\n    skill: 'Web Development',\r\n    subSkills: ['HTML', 'CSS', 'JavaScript', 'React', 'Node.js'],\r\n    image: bubble\r\n  },\r\n  {\r\n    skill: 'Game Development',\r\n    subSkills: ['Unity', 'Unreal Engine', 'C#', 'Mechanic Design', 'Narrative Design'],\r\n    image: bubble\r\n  },\r\n  {\r\n    skill: 'Virtual Reality',\r\n    subSkills: ['Unity', 'VRChat SDK', 'Oculus XR Tools', 'User Experience Design'],\r\n    image: bubble\r\n  },\r\n  {\r\n    skill: 'Software Development',\r\n    subSkills: ['Java', 'Python', 'C++', 'Data Sturcture and Algorithm', 'Git', 'Docker'],\r\n    image: bubble\r\n  },\r\n];\r\n\r\nconst fetchPositionsFromFile = async (filename) => {\r\n  const response = await fetch(`${process.env.PUBLIC_URL}/${filename}`);\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\n\r\nexport function Skill() {\r\n  const [positions, setPositions] = useState([]);\r\n  const [allSmallBubblePositions, setAllSmallBubblePositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const containerSize = { width: window.innerWidth-70, height: window.innerHeight-140 };\r\n    const newPositions = [];\r\n    const sizes = [];\r\n    const success = true;\r\n    //console.log('window.innerWidth', window.innerWidth, 'window.innerHeight', window.innerHeight);\r\n    skills.forEach((skillSet) => {\r\n      const size = skillSet.subSkills.length*50+20;\r\n      const {position,overlap} = generateNonOverlappingPosition(size, newPositions, containerSize, { x: 170, y: 250});\r\n      if(overlap){\r\n        success = false;\r\n      }\r\n      newPositions.push(position);\r\n      sizes.push(size);\r\n    });\r\n\r\n    if(success){\r\n      let finalPos = newPositions.map((pos, index) => ({ ...pos, size: sizes[index] }));\r\n      setPositions(finalPos);\r\n    }else{\r\n      try {\r\n        const storedPositions = fetchPositionsFromFile('largePos.json');\r\n        setPositions(storedPositions);\r\n      } catch (error) {\r\n        console.error('Failed to fetch positions:', error);\r\n      }\r\n    }\r\n    \r\n/*\r\n    const savePositionsToLocalStorage = (positions) => {\r\n      const jsonString = JSON.stringify(positions);\r\n      localStorage.setItem('largePos.json', jsonString);\r\n    };\r\n    savePositionsToLocalStorage(finalPos);\r\n    */\r\n  }, []);\r\n\r\n  const handleSmallBubblePositions = (positions) => {\r\n    setAllSmallBubblePositions(allSmallBubblePositions.concat(positions));\r\n  };\r\n\r\n  const downloadPositionsAsFile = () => {\r\n    const positions = localStorage.getItem('${process.env.PUBLIC_URL}/position/largePos.json');\r\n    const blob = new Blob([positions], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `largePos.json`; // Use template literals to include the name parameter\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const loadPositions = async () => {\r\n    try {\r\n      const storedPositions = await fetchPositionsFromFile('largePos.json');\r\n      console.log('Loaded positions from file:', storedPositions);\r\n      // Do something with the loaded positions, e.g., set them in state\r\n    } catch (error) {\r\n      console.error('Failed to fetch positions:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      \r\n      {positions.length > 0 && skills.map((skillSet, index) => (\r\n        <LargeBubble\r\n          key={index}\r\n          skill={skillSet.skill}\r\n          subSkills={skillSet.subSkills}\r\n          image={skillSet.image}\r\n          size={positions[index].size}\r\n          position={{ x: positions[index].x, y: positions[index].y }}\r\n          existingPositions={allSmallBubblePositions}\r\n          onSmallBubblePositionsGenerated={handleSmallBubblePositions}\r\n        />\r\n      ))}\r\n      <button onClick={downloadPositionsAsFile}>Download Positions</button>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Skill;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}