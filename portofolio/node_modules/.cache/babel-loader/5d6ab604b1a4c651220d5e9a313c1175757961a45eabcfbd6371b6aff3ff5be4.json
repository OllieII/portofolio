{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ZiQi\\\\Desktop\\\\\\u65B0\\u5EFA\\u6587\\u4EF6\\u5939\\\\portofolio\\\\portofolio\\\\src\\\\Components\\\\Skills\\\\Skill.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport LargeBubble from './LargeBubble';\nimport bubble from './bubble.png';\nimport { getRandomInt, generateNonOverlappingPosition } from './utils';\nimport bubbleData from './bubbles.json'; // Import the JSON file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background-color: #282c34;\n  overflow: hidden;\n`;\n_c = Container;\nconst skills = [{\n  skill: 'Artificial Intelligence',\n  subSkills: ['Data Analysis', 'Computer Vision', 'PyTorch', 'Deep Learning'],\n  image: bubble\n}, {\n  skill: 'Web Development',\n  subSkills: ['HTML', 'CSS', 'JavaScript', 'React', 'Node.js'],\n  image: bubble\n}, {\n  skill: 'Game Development',\n  subSkills: ['Unity', 'Unreal Engine', 'C#', '3D Modeling'],\n  image: bubble\n}];\nexport function Skill() {\n  _s();\n  const [positions, setPositions] = useState([]);\n  const [allSmallBubblePositions, setAllSmallBubblePositions] = useState([]);\n  useEffect(() => {\n    if (bubbleData.length > 0) {\n      setPositions(bubbleData);\n    } else {\n      generateAndSavePositions();\n    }\n  }, []);\n  const generateAndSavePositions = () => {\n    const containerSize = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    const newPositions = [];\n    const sizes = [];\n    let attempts = 0;\n    let successful = true;\n    skills.forEach(skillSet => {\n      const size = skillSet.subSkills.length * 50;\n      const {\n        position,\n        overlap\n      } = generateNonOverlappingPosition(size, newPositions, containerSize);\n      successful = successful && !overlap;\n      newPositions.push(position);\n      sizes.push(size);\n    });\n    if (successful) {\n      const finalPositions = newPositions.map((pos, index) => ({\n        ...pos,\n        size: sizes[index]\n      }));\n      setPositions(finalPositions);\n      savePositionsToFile(finalPositions); // Save positions to JSON file\n    } else {\n      if (bubbleData.length > 0) {\n        setPositions(bubbleData);\n      }\n    }\n  };\n  const savePositionsToFile = positions => {\n    // This function should save the positions to the JSON file\n    // In a real application, you would use a backend service to write to the file\n    // Here we will simulate it\n    const fs = require('fs');\n    fs.writeFileSync('./src/bubbles.json', JSON.stringify(positions, null, 2));\n  };\n  const handleSmallBubblePositions = positions => {\n    setAllSmallBubblePositions(allSmallBubblePositions.concat(positions));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: positions.length > 0 && skills.map((skillSet, index) => /*#__PURE__*/_jsxDEV(LargeBubble, {\n      skill: skillSet.skill,\n      subSkills: skillSet.subSkills,\n      image: skillSet.image,\n      size: positions[index].size,\n      position: {\n        x: positions[index].x,\n        y: positions[index].y\n      },\n      existingPositions: allSmallBubblePositions,\n      onSmallBubblePositionsGenerated: handleSmallBubblePositions\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Skill, \"TV0ECe8f1feWaacoeS+EjCA/5G0=\");\n_c2 = Skill;\nexport default Skill;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Skill\");","map":{"version":3,"names":["React","useEffect","useState","styled","LargeBubble","bubble","getRandomInt","generateNonOverlappingPosition","bubbleData","jsxDEV","_jsxDEV","Container","div","_c","skills","skill","subSkills","image","Skill","_s","positions","setPositions","allSmallBubblePositions","setAllSmallBubblePositions","length","generateAndSavePositions","containerSize","width","window","innerWidth","height","innerHeight","newPositions","sizes","attempts","successful","forEach","skillSet","size","position","overlap","push","finalPositions","map","pos","index","savePositionsToFile","fs","require","writeFileSync","JSON","stringify","handleSmallBubblePositions","concat","children","x","y","existingPositions","onSmallBubblePositionsGenerated","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/ZiQi/Desktop/新建文件夹/portofolio/portofolio/src/Components/Skills/Skill.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport LargeBubble from './LargeBubble';\r\nimport bubble from './bubble.png';\r\nimport { getRandomInt, generateNonOverlappingPosition } from './utils';\r\nimport bubbleData from './bubbles.json';  // Import the JSON file\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: #282c34;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst skills = [\r\n  {\r\n    skill: 'Artificial Intelligence',\r\n    subSkills: ['Data Analysis', 'Computer Vision', 'PyTorch', 'Deep Learning'],\r\n    image: bubble\r\n  },\r\n  {\r\n    skill: 'Web Development',\r\n    subSkills: ['HTML', 'CSS', 'JavaScript', 'React', 'Node.js'],\r\n    image: bubble\r\n  },\r\n  {\r\n    skill: 'Game Development',\r\n    subSkills: ['Unity', 'Unreal Engine', 'C#', '3D Modeling'],\r\n    image: bubble\r\n  }\r\n];\r\n\r\nexport function Skill() {\r\n  const [positions, setPositions] = useState([]);\r\n  const [allSmallBubblePositions, setAllSmallBubblePositions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (bubbleData.length > 0) {\r\n      setPositions(bubbleData);\r\n    } else {\r\n      generateAndSavePositions();\r\n    }\r\n  }, []);\r\n\r\n  const generateAndSavePositions = () => {\r\n    const containerSize = { width: window.innerWidth, height: window.innerHeight };\r\n    const newPositions = [];\r\n    const sizes = [];\r\n    let attempts = 0;\r\n    let successful = true;\r\n\r\n    skills.forEach((skillSet) => {\r\n      const size = skillSet.subSkills.length * 50;\r\n      const {position,overlap} = generateNonOverlappingPosition(size, newPositions, containerSize);\r\n      successful = successful && !overlap;\r\n      newPositions.push(position);\r\n      sizes.push(size);\r\n    });\r\n\r\n    if (successful) {\r\n      const finalPositions = newPositions.map((pos, index) => ({ ...pos, size: sizes[index] }));\r\n      setPositions(finalPositions);\r\n      savePositionsToFile(finalPositions);  // Save positions to JSON file\r\n    } else {\r\n      if (bubbleData.length > 0) {\r\n        setPositions(bubbleData);\r\n      }\r\n    }\r\n  };\r\n\r\n  const savePositionsToFile = (positions) => {\r\n    // This function should save the positions to the JSON file\r\n    // In a real application, you would use a backend service to write to the file\r\n    // Here we will simulate it\r\n    const fs = require('fs');\r\n    fs.writeFileSync('./src/bubbles.json', JSON.stringify(positions, null, 2));\r\n  };\r\n\r\n  const handleSmallBubblePositions = (positions) => {\r\n    setAllSmallBubblePositions(allSmallBubblePositions.concat(positions));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {positions.length > 0 && skills.map((skillSet, index) => (\r\n        <LargeBubble\r\n          key={index}\r\n          skill={skillSet.skill}\r\n          subSkills={skillSet.subSkills}\r\n          image={skillSet.image}\r\n          size={positions[index].size}\r\n          position={{ x: positions[index].x, y: positions[index].y }}\r\n          existingPositions={allSmallBubblePositions}\r\n          onSmallBubblePositionsGenerated={handleSmallBubblePositions}\r\n        />\r\n      ))}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Skill;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}